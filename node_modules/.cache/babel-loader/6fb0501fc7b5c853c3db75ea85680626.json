{"ast":null,"code":"var _jsxFileName = \"/home/rodolfo/Documentos/Projects/API-central-de-erros-front/src/views/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APIRouts, fetchApi } from '../service';\nimport { Loading, LoginForm, Message } from '../components';\nimport { localStorageP } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [state, setState] = useState({\n    isLoading: false,\n    loggedIn: false,\n    loginError: false\n  });\n\n  const handleState = obj => {\n    setState(lastState => ({ ...lastState,\n      ...obj\n    }));\n  };\n\n  const submit = user => {\n    handleState({\n      isLoading: true\n    });\n    fetchApi.get(APIRouts.GETTOKEN(user.email, user.password)).then(({\n      data\n    }) => {\n      localStorageP.setStorage('token', data);\n      handleState({\n        isLoading: false,\n        loggedIn: true\n      });\n    }).catch(() => {\n      handleState({\n        loginError: true,\n        isLoading: false\n      });\n      setTimeout(() => handleState({\n        loginError: false\n      }), 3000);\n    });\n  };\n\n  if (state.loggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.loginError && /*#__PURE__*/_jsxDEV(Message, {\n      message: \"Dados inv\\xE1lidos!\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }, this), state.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      submit: submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"eT843N1IRblhZz9Foggc8CMJoNw=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rodolfo/Documentos/Projects/API-central-de-erros-front/src/views/Login.jsx"],"names":["React","useState","Redirect","APIRouts","fetchApi","Loading","LoginForm","Message","localStorageP","Login","state","setState","isLoading","loggedIn","loginError","handleState","obj","lastState","submit","user","get","GETTOKEN","email","password","then","data","setStorage","catch","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,YAAnC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,OAA7B,QAA4C,eAA5C;AACA,SAASC,aAAT,QAA8B,UAA9B;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAAEW,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BL,IAAAA,QAAQ,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgB,SAAGD;AAAnB,KAAhB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAME,MAAM,GAAIC,IAAD,IAAU;AACvBJ,IAAAA,WAAW,CAAC;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAD,CAAX;AAEAR,IAAAA,QAAQ,CAACgB,GAAT,CAAajB,QAAQ,CAACkB,QAAT,CAAkBF,IAAI,CAACG,KAAvB,EAA8BH,IAAI,CAACI,QAAnC,CAAb,EACGC,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBjB,MAAAA,aAAa,CAACkB,UAAd,CAAyB,OAAzB,EAAkCD,IAAlC;AACAV,MAAAA,WAAW,CAAC;AAAEH,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAD,CAAX;AACD,KAJH,EAKGc,KALH,CAKS,MAAM;AACXZ,MAAAA,WAAW,CAAC;AAAED,QAAAA,UAAU,EAAE,IAAd;AAAoBF,QAAAA,SAAS,EAAE;AAA/B,OAAD,CAAX;AACAgB,MAAAA,UAAU,CAAC,MAAMb,WAAW,CAAC;AAAED,QAAAA,UAAU,EAAE;AAAd,OAAD,CAAlB,EAA2C,IAA3C,CAAV;AACD,KARH;AASD,GAZD;;AAcA,MAAIJ,KAAK,CAACG,QAAV,EAAoB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEpB,sBACE;AAAA,eACGH,KAAK,CAACI,UAAN,iBAAoB,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,qBAAjB;AAAoC,MAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YADvB,EAGEJ,KAAK,CAACE,SAAN,gBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEM;AAAnB;AAAA;AAAA;AAAA;AAAA,YALN;AAAA,kBADF;AAUD;;GAjCuBT,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APIRouts, fetchApi } from '../service';\nimport { Loading, LoginForm, Message } from '../components';\nimport { localStorageP } from '../utils';\n\nexport default function Login() {\n  const [state, setState] = useState({ isLoading: false, loggedIn: false, loginError: false });\n\n  const handleState = (obj) => {\n    setState((lastState) => ({ ...lastState, ...obj }));\n  };\n\n  const submit = (user) => {\n    handleState({ isLoading: true });\n\n    fetchApi.get(APIRouts.GETTOKEN(user.email, user.password))\n      .then(({ data }) => {\n        localStorageP.setStorage('token', data);\n        handleState({ isLoading: false, loggedIn: true });\n      })\n      .catch(() => {\n        handleState({ loginError: true, isLoading: false });\n        setTimeout(() => handleState({ loginError: false }), 3000);\n      });\n  };\n\n  if (state.loggedIn) return <Redirect to=\"/dashboard\" />;\n\n  return (\n    <>\n      {state.loginError && <Message message=\"Dados invÃ¡lidos!\" className=\"error\" />}\n      {\n      state.isLoading\n        ? <Loading />\n        : <LoginForm submit={submit} />\n      }\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}